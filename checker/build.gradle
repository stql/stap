apply plugin: 'java'

sourceCompatibility = 1.7
targetCompatibility = 1.7

defaultTasks = ['clean', 'jar']

repositories {
    mavenCentral()
}

configurations {
    antlr3
}

jar {
   from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
   manifest { attributes 'Main-Class': 'stql.checker.Checker' }
}

dependencies {
    compile 'org.antlr:antlr-complete:3.5.2', 'commons-logging:commons-logging:1.1.1'
    antlr3 'org.antlr:antlr:3.5.2'
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

task antlrOutputDir << {
    mkdir(generateGrammarSource.destinationDir)
}

task generateGrammarSource(dependsOn: antlrOutputDir, type: JavaExec) {
    description = 'Generates Java sources from Antlr3 grammars.'

    ext.destinationDir = "$buildDir/generated-sources/antlr"
    def antlrSource = 'src/main/antlr'

    inputs.dir file(antlrSource)
    outputs.dir file(destinationDir)

    def grammars = fileTree(antlrSource).include(['**/HiveLexer.g', '**/HiveParser.g'])

    main = 'org.antlr.Tool'
    classpath = configurations.antlr3
    args = ["-o", "${destinationDir}", grammars.files].flatten()
}

compileJava {
    dependsOn generateGrammarSource
    source generateGrammarSource.destinationDir
}
